--- openssl-1.0.1m.orig/crypto/dso/dso_lib.c	2015-06-06 08:54:11.636890011 +0000
+++ openssl-1.0.1m/crypto/dso/dso_lib.c	2015-06-06 08:55:56.288886898 +0000
@@ -226,10 +226,18 @@ DSO *DSO_load(DSO *dso, const char *file
     }
     if (ret->meth->dso_load == NULL) {
         DSOerr(DSO_F_DSO_LOAD, DSO_R_UNSUPPORTED);
+		/* Make sure we unset the filename on failure, because we use
+		 * this to determine when the DSO has been loaded above. */
+		OPENSSL_free(ret->filename);
+		ret->filename = NULL;
         goto err;
     }
     if (!ret->meth->dso_load(ret)) {
         DSOerr(DSO_F_DSO_LOAD, DSO_R_LOAD_FAILED);
+		/* Make sure we unset the filename on failure, because we use
+		 * this to determine when the DSO has been loaded above. */
+		OPENSSL_free(ret->filename);
+		ret->filename = NULL;
         goto err;
     }
     /* Load succeeded */
--- openssl-1.0.1m.orig/crypto/engine/eng_dyn.c	2015-06-06 08:54:11.700890009 +0000
+++ openssl-1.0.1m/crypto/engine/eng_dyn.c	2015-06-06 08:57:53.716883405 +0000
@@ -428,7 +428,7 @@ static int int_load(dynamic_data_ctx *ct
     /* Unless told not to, try a direct load */
     if ((ctx->dir_load != 2) && (DSO_load(ctx->dynamic_dso,
                                           ctx->DYNAMIC_LIBNAME, NULL,
-                                          0)) != NULL)
+                                          0) != NULL))
         return 1;
     /* If we're not allowed to use 'dirs' or we have none, fail */
     if (!ctx->dir_load || (num = sk_OPENSSL_STRING_num(ctx->dirs)) < 1)
@@ -441,6 +441,9 @@ static int int_load(dynamic_data_ctx *ct
         if (DSO_load(ctx->dynamic_dso, merge, NULL, 0)) {
             /* Found what we're looking for */
             OPENSSL_free(merge);
+			/* Previous failed loop iterations, if any, will have resulted in
+			 * errors. Clear them out before returning success. */
+			ERR_clear_error();
             return 1;
         }
         OPENSSL_free(merge);
